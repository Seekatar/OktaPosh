name: CI

env:
  OKTA_BASE_URI: https://dev-671484-admin.okta.com
  OKTA_API_TOKEN: ${{ secrets.OKTA_API_TOKEN }}

# workflow_dispatch: allows manually kicking off a build
on:
  workflow_dispatch:
  push:
    branches: [ release/**, main ]
    paths:
    - '!*.md'
    - '!docs-generated'
    - '!okta_doc'
  pull_request:
    branches: [ main ]

defaults:
  run:
    shell: pwsh

jobs:
  CI-Core:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
      max-parallel: 1
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Get PS Repos
      shell: pwsh
      working-directory: OktaPosh
      run: |
       Get-PSRepository

    - name: Run Script Analyzer
      shell: pwsh
      working-directory: OktaPosh
      run: |
        if ( -not (Get-Module -Name PSScriptAnalyzer ) ) { Install-Module -Name PSScriptAnalyzer -Scope CurrentUser -Force -Confirm:$false -SkipPublisherCheck }
        $results = Invoke-ScriptAnalyzer -Path . -Recurse
        $results
        if ($results | Where-Object Severity -eq Error ) { Write-Error "Analyzer detected errors." }

    - name: Run Pester Tests
      shell: pwsh
      working-directory: tests/integration
      run: |
        Install-Module Pester -Confirm:$False -Force
        $result = Invoke-Pester -Configuration @{
                                                  Output = @{Verbosity='Detailed'}
                                                  Run = @{PassThru=$true}
                                                  CodeCoverage=@{Enabled=$true;Path='../../OktaPosh/public/*.ps1'}
                                                }
        $result.tests | select name,result
        if ($result.Result -ne "Passed") {
          Write-Error "Pester tests failed"
        }

    - uses: actions/upload-artifact@v2
      name: Upload coverage.xml
      with:
        name: ${{ matrix.os }}_coverage.xml
        path: tests/integration/coverage.xml

  CI-PS5:
    runs-on: windows-latest
    needs: CI-Core

    steps:
    - uses: actions/checkout@v2

    - name: Run Pester Tests
      shell: powershell
      working-directory: tests/integration
      run: |
        Install-Module Pester -Confirm:$False -Force
        $result = Invoke-Pester -Configuration @{
                                                  Output = @{Verbosity='Detailed'}
                                                  Run = @{PassThru=$true}
                                                }
        $result.tests | select name,result
        if ($result.Result -ne "Passed") {
          Write-Error "Pester tests failed"
        }

  publish:
    if: github.ref  == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [CI-Core,CI-PS5]

    steps:
    - uses: actions/checkout@v2

    - name: Set manifest build version
      uses: seekatar/set-posh-manifest-action@v1
      with:
          manifest-path: OktaPosh/OktaPosh.psd1
          build: ${{ github.run_number }}

    - name: Publish Module
      working-directory: OktaPosh
      env:
        PSGalleryKey: ${{ secrets.PSGALLERYKEY }}
      run: |
        gci
        Publish-Module -Path . -NuGetApiKey "$env:PSGalleryKey"
