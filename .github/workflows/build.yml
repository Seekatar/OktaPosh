name: CI

env:
  oktaBaseUri: https://dev-671484-admin.okta.com
  oktaApiToken: ${{ secrets.OKTA_API_TOKEN }}

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

defaults:
  run:
    shell: pwsh

jobs:
  test:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
      max-parallel: 1
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Run Script Analyzer
      shell: pwsh
      working-directory: src
      run: |
        if ( -not (Get-Module -Name PSScriptAnalyzer ) ) { Install-Module -Name PSScriptAnalyzer -Scope CurrentUser -Force -Confirm:$false -SkipPublisherCheck }
        $results = Invoke-ScriptAnalyzer -Path . -Recurse
        $results
        if ($results | ? Severity -eq Error ) { Write-Error "Analyzer detected errors." }

    - name: Run Pester Tests
      shell: pwsh
      working-directory: tests/integration
      run: |
        Install-Module Pester -Confirm:$False -Force
        $result = Invoke-Pester -PassThru
        $result.tests | select name,result
        if ($result.Result -ne "Passed") {
          Write-Error "Pester tests failed"
        }

  testPS5:
    runs-on: windows-latest
    needs: test

    steps:
    - uses: actions/checkout@v2

    - name: Run Pester Tests
      shell: powershell
      working-directory: tests/integration
      run: |
        Install-Module Pester -Confirm:$False -Force
        $result = Invoke-Pester -PassThru
        $result.tests | select name,result
        if ($result.Result -ne "Passed") {
          Write-Error "Pester tests failed"
        }

  publish:
    runs-on: ubuntu-latest
    needs: [test,testPS5]

    steps:
    - uses: actions/checkout@v2

    - name: Set manifest build version
      uses: seekatar/set-posh-manifest-action@v1
      with:
          manifest-path: src/OktaPosh.psd1
          build: ${{ github.run_number }}

    - name: Publish Module
      env:
        PSGalleryKey: ${{ secrets.PSGALLERYKEY }}
      run: |
        gci
        Write-Host 'Publish-Module -Path . -NuGetApiKey "$env:PSGalleryKey"'

